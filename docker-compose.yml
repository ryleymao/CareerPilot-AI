version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jobright_postgres
    environment:
      POSTGRES_USER: jobright
      POSTGRES_PASSWORD: jobright_password
      POSTGRES_DB: jobright_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobright"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    container_name: jobright_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database for embeddings
  qdrant:
    image: qdrant/qdrant:latest
    container_name: jobright_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jobright_backend
    environment:
      DATABASE_URL: postgresql://jobright:jobright_password@postgres:5432/jobright_db
      REDIS_URL: redis://redis:6379/0
      QDRANT_URL: http://qdrant:6333
      SECRET_KEY: your-secret-key-change-in-production
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploaded_resumes:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for background tasks
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jobright_celery_worker
    environment:
      DATABASE_URL: postgresql://jobright:jobright_password@postgres:5432/jobright_db
      REDIS_URL: redis://redis:6379/0
      QDRANT_URL: http://qdrant:6333
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./backend:/app
      - uploaded_resumes:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.celery_app worker --loglevel=info

  # Celery Beat for scheduled tasks (job scraping)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jobright_celery_beat
    environment:
      DATABASE_URL: postgresql://jobright:jobright_password@postgres:5432/jobright_db
      REDIS_URL: redis://redis:6379/0
      QDRANT_URL: http://qdrant:6333
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.celery_app beat --loglevel=info

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jobright_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: jobright_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  uploaded_resumes:

networks:
  default:
    name: jobright_network
